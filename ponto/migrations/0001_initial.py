# Generated by Django 4.1.7 on 2023-03-29 15:52

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import ponto.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('matricula', models.CharField(max_length=15, unique=True, verbose_name='Matricula')),
                ('data_admissao', models.DateField(default=datetime.datetime(2023, 3, 29, 15, 52, 33, 123927, tzinfo=datetime.timezone.utc), verbose_name='Data de admissão')),
                ('data_senha', models.DateField(default=datetime.datetime(2023, 3, 29, 15, 52, 33, 123927, tzinfo=datetime.timezone.utc), verbose_name='Data da ultima troca de senha')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', ponto.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Solicitacao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('CRI', 'Criada'), ('VGE', 'Validada pelo Gestor'), ('RGE', 'Recusada pelo Gestor'), ('DEF', 'Deferido'), ('RRH', 'Recusada pelo RH'), ('CON', 'Concluida')], max_length=3)),
                ('tipo_ferias', models.CharField(choices=[('INT', 'Integral'), ('VEN', 'Venda'), ('PAR', 'Parcial')], max_length=3)),
                ('intervalos', models.TextField()),
                ('data_criacao', models.DateField(default=datetime.datetime(2023, 3, 29, 15, 52, 33, 123927, tzinfo=datetime.timezone.utc), verbose_name='Data de criação')),
                ('solicitante', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Solicitações',
            },
        ),
        migrations.CreateModel(
            name='Setor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True, verbose_name='name')),
                ('contingente', models.IntegerField(blank=True)),
                ('permissions', models.ManyToManyField(blank=True, to='auth.permission', verbose_name='permissions')),
            ],
        ),
        migrations.AddField(
            model_name='customuser',
            name='gestor',
            field=models.ManyToManyField(blank=True, to='ponto.setor'),
        ),
        migrations.AddField(
            model_name='customuser',
            name='setores',
            field=models.ManyToManyField(blank=True, related_name='user_set', related_query_name='user', to='ponto.setor', verbose_name='setores'),
        ),
        migrations.AddField(
            model_name='customuser',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions'),
        ),
    ]
